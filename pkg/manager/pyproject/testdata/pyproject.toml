[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "example-project"
version = "0.1.0"
description = "An example project to demonstrate various dependency formats in pyproject.toml"
authors = ["Your Name <you@example.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://example.com"
repository = "https://github.com/yourusername/example-project"
keywords = ["example", "dependencies", "pyproject"]

[project.dependencies]
# Direct dependencies with version constraints
test = "2.26.0"
test2 = ">=2.26.0"
requests = "^2.26.0"
numpy = ">=1.21,<2.0"
# pandas = { version = "^1.3.0", markers = "python_version >= '3.6'" }

# Dependency with extras
# flask = { version = "^2.0", extras = ["async"] }

# Dependency from a Git repository
# my-package = { git = "https://github.com/username/my-package.git", branch = "main" }

# Dependency from a specific commit in a Git repository
# another-package = { git = "https://github.com/username/another-package.git", rev = "abcdef123456" }

# Dependency from a local path
# local-package = { path = "../local-package", develop = true }

# Dependency from a URL (e.g., a wheel file)
# custom-package = { url = "https://example.com/packages/custom-package-0.1.0-py3-none-any.whl" }

[project.optional-dependencies]
# Optional dependencies with different formats
dev = [
    "pytest",
    "black",
    "mypy",
]

docs = [
    "sphinx",
    "sphinx-rtd-theme",
]

# Optional dependency with version constraints
data = [
    "matplotlib >=3.4,<4.0",
    "seaborn",
]

[tool.poetry.scripts]
# Define scripts for easy command-line access
example-script = "example_module:main_function"

[tool.poetry.plugins]
# Define plugins if applicable
"console_scripts" = ["example-cli = example_module.cli:main"]
